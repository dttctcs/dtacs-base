apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spilo
spec:
  selector:
    matchLabels: {}
      
  replicas: 3
  serviceName: spilo
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8008"
        prometheus.io/scrape: "true"
    spec:
      # service account that allows changing endpoints and assigning pod labels
      # in the given namespace: https://kubernetes.io/docs/user-guide/service-accounts/
      # not required unless you've changed the default service account in the namespace
      # used to deploy Spilo
      serviceAccountName: spilo
      containers:
      - name: spilo
        image: registry.opensource.zalan.do/acid/spilo-14:2.1-p3  # put the spilo image here
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8008
          protocol: TCP
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /home/postgres/pgdata
          name: pgdata
        - mountPath: /dev/shm
          name: dshm          
        envFrom:
          - configMapRef:
             name: spilo-env
          - configMapRef:
             name: spilo-config
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 512Mi
        name: dshm            
      terminationGracePeriodSeconds: 0    
  volumeClaimTemplates:
  - metadata:
      name: pgdata
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi

---
apiVersion: v1
kind: Endpoints
metadata:
  name: spilo
subsets: []

---
apiVersion: v1
kind: Service
metadata:
  name:  spilo-master
spec:
  selector:
    role: master
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432

---


apiVersion: v1
kind: Service
metadata:
  name: spilo-replica
spec:
  type: ClusterIP
  selector:
    role: replica
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: spilo

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spilo
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  # delete is required only for 'patronictl remove'
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - patch
  - update
  # the following three privileges are necessary only when using endpoints
  - create
  - list
  - watch
  # delete is required only for for 'patronictl remove'
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - update
  - watch
# The following privilege is only necessary for creation of headless service
# for patronidemo-config endpoint, in order to prevent cleaning it up by the
# k8s master. You can avoid giving this privilege by explicitly creating the
# service like it is done in this manifest (lines 160..169)
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spilo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spilo
subjects:
- kind: ServiceAccount
  name: spilo

